Build environments
==================

Funkd supports these types of build environments:

  * automake - cd with-automake/
  * autoconf - cd with-autoconf/

Maintainer requirements for funkd
=================================

For this package, everyone is considered a maintainer, so everyone will have
to run these. Change directory *first* into with-automake/ and run:

./autogen.sh

Only after you have run this can you change directory into with-autoconf and
run ./autogen.sh there, the reason for this is that the with-autoconf/
directory has symlinks for files under the with-automake/build-aux/ directory,
the reason for this is that if we want to make use autoconf AC_CONFIG_FILES()
magic for the Makefile (example Config.mk.in) @HELPERS@ to replace variables
we need these build-aux helpers. The not-so-well documented strategy for
maintainers that want to take advantage of this is to copy automake's own copy
of their config.guess, config.sub, install-sh and other files, we make this
explicit here by requiring you to run autogen.sh first on the with-automake/
directory. Since systemd does not allow variables to be used as part of the
binary that we will use for ExecStart, we also then require modifying the
path using AC_CONFIG_FILES() on the service unit file, this required doing
some early annotations on the autoconf variables with autoconf defaults
using the provided example m4/paths.m4 as otherwise they would not be picked
up. For more details on this see the README.

To build funkd
==============

On any of the type of supported build environments run:

./configure
make

To install funkd
================

Since there are two types of targets you can install we allow installation
through a target for each one:

sudo make install-dyn
sudo make install-reg

If you don't specify one and just use make install the make install-dyn target
will be used. Note that install targets only for systemd have been properly
added into the makefiles, an LSB init script is not provided but patches are
welcome to add it.

To clean
========

make clean

Maintainer / Distro cleanup
===========================

This will clean everything, not only just build targets but also files
generated by autotools. Both of these two targets do the same.

make maintainer-clean
make dist-clean

Systemd helpers
===============

The build environments also provides some helpers to enable lazy / easy
system administration / testing of the systemd service units:

  * sudo make enable - enables service units
  * sudo make reload - reloads systemd
  * sudo make start  - triggers a start of the service
  * sudo make stop   - triggers a stop of the service
  * sudo make status - gets service status
